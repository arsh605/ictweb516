Controller
o   List Task Controller
class ListTaskController < ApplicationController
         
        def index
                        @listTasks = ListTask.all.order("created_at DESC")
        end
 
        def new
                        @listTask = ListTask.new
        end
 
        def create
                        @listTask = ListTask.new(listTask_params)
 
                        if @listTasks.save
                                        redirect_to @listTasks
                        else
                                        render 'new'
                        end
        end
 
        def show
        end
 
        def update
 
                        if @listTask.update(listTask_params)
                                        redirect_to @listTasks
                        else
                                        render 'edit'
                        end
        end
 
        def edit
                        @listTask = ListTask.find(params[:id])
        end
 
        def destroy
                        @listTask = ListTask.find(params[:id])
                        @listTask.destroy
 
                        redirect_to listTasks_path
 
        end
 
        public
 
        def listTask_params
                        params.require(:listTask).permit(:title, :content)
        end
 
        
 
end
o   Task Controller
 
class TasksController < ApplicationController
 
        def create
                        @listTask = ListTask.find(params[:listTask_id])
                        @task = @listTask.tasks.create(params[:task].permit(:name, :comment))
                        redirect_to listTask_path(@listTask)       
        end
 
        def destroy
                        @listTask = ListTask.find(params[:listTask_id])
                        @task = @listTask.tasks.find(params[:id])
                        @task.destroy
                        redirect_to listTask_path(@task)
        end
end
 
-          Model
o   List Task Model
class ListTask < ApplicationRecord
        has_many :tasks, dependent: :destroy
end
o   Task Model
class Task < ApplicationRecord
        belongs_to :listTask
end
-          View
o   List Task View
§  Form
<div class="section">
<%= simple_form_for @listTask do |f| %>
  <div class="field">
    <div class="control">
      <%= f.input :title, input_html: { class: 'input' }, wrapper: false, label_html: { class: 'label' } %>
    </div>
  </div>
 
  <div class="field">
    <div class="control">
      <%= f.input :content, input_html: { class: 'textarea' }, wrapper: false, label_html: { class: 'label' }  %>
    </div>
  </div>
  <%= f.button :submit, 'Create list task', class: "button is-primary" %>
<% end %>
</div>
§  Edit
<% content_for :page_title, "Edit List Task" %>
<%= render 'form' %>
§  Index
<% content_for :page_title,  "Index" %>
 
<div class="section">
        <div class="container">
                        <% @listTasks.each do |post| %>
                                        <div class="card">
                          <div class="card-content">
                            <div class="media">
                              <div class="media-content">
                                <p class="title is-4"><%= link_to post.title, listTask  %></p>
                              </div>
                            </div>
                            <div class="content">
                                       <%= listTask.content %>
                            </div>
                            <div class="comment-count">
                                        <span class="tag is-rounded"><%= listTask.tasks.count %> tasks</span>
                            </div>
                          </div>
                        </div>
                        <% end %>
        </div>
</div>
§  New
<% content_for :page_title, "Create new List Task" %>
<%= render 'form' %>
§  Show
<% content_for :page_title, @listTask.title %>
 
<section class="section">
        <div class="container">
                        <nav class="level">
                          <!-- Left side -->
                          <div class="level-left">
                            <p class="level-item">
                                <strong>Actions</strong>
                            </p>
                          </div>
                          <!-- Right side -->
                          <div class="level-right">
                                        <p class="level-item">
                                        <%= link_to "Edit", edit_listTask_path(@post), class:"button" %>
                                        </p>
                                        <p class="level-item">
                                                        <%= link_to "Delete", listTask_path(@post), method: :delete, data: { confirm: "Are you sure?" }, class:"button is-danger" %>
                                                        </p>
                          </div>
                        </nav>
                        <hr/>
 
                        <div class="content">
                                        <%= @listTask.content %>
                        </div>
        </div>
</section>
 
<section class="section tasks">
        <div class="container">
                        <h2 class="subtitle is-5"><strong><%= @listTask.tasks.count %></strong> Tasks</h2>
                        <%= render @listTask.tasks %>
                        <div class="tasks-form">
                                        <hr />
                                        <h3 class="subtitle is-3">Add a task</h3>
                                        <%= render 'tasks/form' %>
                        </div>
        </div>
</section>
o   Task View
§  Form
<%= simple_form_for([@listTask, @listTask.tasks.build]) do |f| %>
<!--
collection.build(attributes = {}, …) Returns one or more new objects of the collection type that have been instantiated with attributes and linked to this object through a foreign key, but have not yet been saved. Note: This only works if an associated object already exists, not if it‘s nil!
-->
<div class="field">
  <div class="control">
    <%= f.input :name, input_html: { class: 'input' }, wrapper: false, label_html: { class: 'label' } %>
  </div>
</div>
 
<div class="field">
  <div class="control">
    <%= f.input :comment, input_html: { class: 'textarea' }, wrapper: false, label_html: { class: 'label' }  %>
  </div>
</div>
<%= f.button :submit, 'Add task', class: "button is-primary" %>
<% end %>
§  Task
<div class="box">
  <article class="media">
    <div class="media-content">
      <div class="content">
        <p>
          <strong><%= task.name %>:</strong>
          <%= task.task %>
        </p>
      </div>
    </div>
     <%= link_to 'Delete', [task.listTask, task],
                  method: :delete, class: "button is-danger", data: { confirm: 'You want to delete?' } %>
  </article>
 
</div>
-          DB
class CreateListTasks < ActiveRecord::Migration[5.1]
  def change
    create_table :listTasks do |t|
      t.string :title
      t.text :content
 
      t.timestamps
    end
  end
end
 
class CreateTasks < ActiveRecord::Migration[5.1]
  def change
    create_table :tasks do |t|
      t.string :name
      t.text :comment
 
      t.timestamps
    end
  end
end
 
class AddListTaskIdToTasks < ActiveRecord::Migration[5.1]
  def change
        add_column :tasks, :listTask_id, :integer
  end
end
